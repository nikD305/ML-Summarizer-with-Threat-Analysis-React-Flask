(HuggingFace Summarizer)


 from transformers import pipeline
from transformers import AutoTokenizer, AutoModelForSeq2SeqLM



model = AutoModelForSeq2SeqLM.from_pretrained("snrspeaks/t5-one-line-summary")

tokenizer = AutoTokenizer.from_pretrained("snrspeaks/t5-one-line-summary")

classifier = pipeline("summarization", model=model, tokenizer=tokenizer)

results = classifier(["summarize:i am working hard to get job but i couldnt do it so i have two options either government or private jobs im unable to decide which to take so first i will try private jobs if i dint get then i will try government."])

print(results)

///


(HuggingFace Sentiment Analysis)

 from transformers import pipeline
from transformers import AutoTokenizer, AutoModelForSequenceClassification



model = AutoModelForSequenceClassification.from_pretrained("distilbert-base-uncased-finetuned-sst-2-english")

tokenizer = AutoTokenizer.from_pretrained("distilbert-base-uncased-finetuned-sst-2-english")

classifier = pipeline("sentiment-analysis", model=model, tokenizer=tokenizer)

results = classifier(["i am not happy very much happy"])

print(results)
////

(ALSO SentimentAnalys Basis)

  from transformers import pipeline

import torch
import torch.nn.functional as F

classifier = pipeline("sentiment-analysis")
res = classifier("whatever.")
print(res)